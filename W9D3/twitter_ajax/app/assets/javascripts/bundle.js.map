{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA,mCAAmC,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA,WAAW;AACX;;AAEA;;AAEA;AACA;AACA;;;AAGA;;;;;;UChEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,qBAAqB,mBAAO,CAAC,oDAAiB;;;;AAI9C;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,C","sources":["./frontend/follow_toggle.js","webpack/bootstrap","./frontend/twitter.js"],"sourcesContent":["class FollowToggle {\n    constructor(el, e) {\n        this.userId = $(el).attr(\"data-user_id\")\n        this.followState = $(el).attr(\"data-initial-follow-state\")\n        this.element = $(el)\n\n        this.render()\n        //this.handleclick(e)\n        this.handleClick = this.handleClick.bind(this);\n        this.element.on(\"click\", this.handleClick);\n    }\n\n    render() {\n        if (this.followState === \"unfollowed\") {\n            this.element.text(\"follow\")\n        } else {\n            this.element.text(\"unfollow\")\n        }\n    }\n\n    handleClick(e) {\n        //this.element.on(\"submit\", (e) => {\n            e.preventDefault();\n            console.log(\"handleclick function is being called!\");\n            if (this.followState ===\"unfollowed\") {\n                $.ajax ({\n                    url: `/users/${this.userId}/follow`,\n                    type: \"post\",\n                    dataType: \"json\",\n                    success: () => {\n                        console.log(\"ajax post request success\");\n                        this.followState = \"followed\";\n                        this.render();\n                    },\n                    error: () => {\n                        console.log(\"failed ajax post request\");\n                    }\n                })\n            } else {\n                $.ajax ({\n                    url: `/users/${this.userId}/follow`,\n                    type: \"delete\",\n                    dataType: \"json\",\n                    success: () => {\n                        console.log(\"ajax delete request sucess\");\n                        this.followState = \"unfollowed\";\n                        this.render();\n                    },\n                    error: () => {\n                        console.log(\"failed ajax delete request\");\n                    }\n                })\n            }\n\n        //})\n        console.log(\"post ajax\");\n\n    }\n\n    // this needs to be bound because we call this.user_id within ajax. \n    // if we refer to this from an outside function, the this will not keep context and become undefined.\n}\n\n\nmodule.exports = FollowToggle","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const FollowToggle = require(\"./follow_toggle\");\n\n\n\n$(document).ready(function() {\n    const $buttons_arr = $(\"button.follow-toggle\")\n    $buttons_arr.each( (index, el) => {\n        new FollowToggle(el)\n    })\n})"],"names":[],"sourceRoot":""}